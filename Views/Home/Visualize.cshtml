@model CrashList;
@{
    ViewData["Title"] = "Visualize";
}

<!DOCTYPE html>
<html>
<head>
    <script src='https://cdn.plot.ly/plotly-latest.min.js'></script>
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link rel="stylesheet" type="text/css" href="~/css/main.css">
    <style>
        table {
            border-collapse: collapse;
            border-spacing: 0;
            width: 100%;
            border: 1px solid #ddd;
        }

        th, td {
            text-align: left;
            padding: 8px;
        }

        tr:nth-child(even) {
            background-color: #f2f2f2
        }

        .chart-container {
            width: 80%;
            height: 480px;
            margin: 0 auto;
        }

        .pie-chart-container {
            width: 360px;
            height: 360px;
            float: left;
        }

        .doughnut-chart-container {
            width: 360px;
            height: 360px;
            float: left;
        }

        .doughnut-chart-container-two {
            width: 360px;
            height: 360px;
            float: left;
        }
    </style>
</head>
<body>


    <div class="topnav">
        <a href="Index.cshtml">Accidents And Crashes</a>
        <a href="Crashstats.cshtml">Monroe county crash Data Description</a>
        <a class="active" href="Visualize.cshtml">Visualising DATA</a>
        <a href="Aboutus.cshtml">About our Team</a>
    </div>

    <h1>Data Visualisation</h1>
    <p aligh=justify>
        Visualizing data helps to get a better understanding of the data.
        <table>
            <tr>
                <th>Borough</th>
                <th>Crash Date</th>
                <th>Number of Persons Injured</th>
                <th>Number of Persons Killed</th>
                <th>Number of pedestrians injured</th>
                <th>Number of Pedestrians Killed</th>
            </tr>
            @foreach (var item in Model.crashList)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Borough)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Crash_date)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Number_of_persons_injured)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Number_of_persons_killed)
                    </td>
                     <td>
                        @Html.DisplayFor(modelItem => item.Number_of_pedestrians_injured)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Number_of_pedestrians_killed)
                    </td>
                
                </tr>
            }        
        </table>
    </p>


    <div class="chart-container">
        <div class="doughnut-chart-container">
            <canvas id="doughnut-chartcanvas-1"></canvas>
        </div>

        <div class="doughnut-chart-container-two  ">
            <canvas id="doughnut-chartcanvas-2"></canvas>
        </div>
    </div>

    <script src="js/jquery.min.js"></script>
    <script src="js/Chart.min.js"></script>
    <script src="js/doughnut.js"></script>

    <br>

    <div class="chart-container">
        <div class="pie-chart-container">
            <canvas id="pie-chartcanvas-1" ; height: 300px
                    width: 300 px></canvas>
        </div>



        <div class="pie-chart-container">
            <canvas id="pie-chartcanvas-2" height="500" ; width="500"></canvas>
        </div>
    </div>


    <script src="js/jquery.min.js"></script>
    <script src="js/Chart.min.js"></script>

    <script src="js/pie.js"></script>





</body>
</html>


